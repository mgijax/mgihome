#!/usr/local/bin/python

# Program: feedback.cgi
# Purpose: handle input from the form generated by feedback_form.cgi

import sys
if '.' not in sys.path:
	sys.path.insert (0, '.')

import string

import config
import feedbacklib
import homelib
import header
import CGI
import errorlib

class InputProcessingCGI (CGI.CGI):
	# Concept:
	#	IS: a CGI object with a main() method for handling input from
	#		a the form generated by an invocation of
	#		feedback_form.cgi
	#	HAS: see CGI
	#	DOES: see CGI for the basics.  In this subclass, we get the
	#		input, validate it, show an error page if needed, or
	#		send e-mail to Remedy and a confirmation page to the
	#		user if no errors occurred.

	def main (self):
		# Purpose: serve as the main program for this CGI object.
		# Returns: nothing
		# Assumes: nothing
		# Effects: see DOES in the class comments
		# Throws: propagates exceptions raised by
		#	feedbacklib.getInputObj()
		# Notes: The CGI class's go() method is a wrapper around this
		#	script to provide exception handling and logging.

		parms = self.get_parms()
		inp = feedbacklib.getInputObj (parms)
		errors = inp.validate()
		if errors:
                        errorlib.show_error (
				'<UL><LI>%s</UL>' % \
					string.join (errors, '\n<LI>'),
                                1, 'MGI Your Input Form',
				header.bodyStart(),
				header.bodyStop())
                        sys.exit (0)
		else:
			inp.sendMail()
			inp.printConfirmationPage()
		return

###--- Main Program ---###

if __name__ == '__main__':
	mycgi = InputProcessingCGI()
	mycgi.go()
